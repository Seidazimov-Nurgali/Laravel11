name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Установка Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Кеширование Docker слоев
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      # Сборка и запуск Docker контейнеров
      - name: Build and run Docker containers
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml up -d

      # Тестирование
      - name: Run tests
        run: |
          docker-compose exec app ./vendor/bin/phpunit

      # Деплой на DigitalOcean
      - name: Deploy to DigitalOcean
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          DO_HOST: ${{ secrets.DO_HOST }}
        run: |
          # Устанавливаем SSH ключ
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Устанавливаем строгую проверку хоста
          ssh-keyscan -H $DO_HOST >> ~/.ssh/known_hosts

          # Подключаемся и перезапускаем контейнеры на сервере
          ssh -o StrictHostKeyChecking=no root@$DO_HOST << 'EOF'
            cd /var/www/laravel11
            git pull origin main
            docker-compose -f /var/www/laravel11/docker-compose.yml down
            docker-compose -f /var/www/laravel11/docker-compose.yml up -d --build
          EOF
